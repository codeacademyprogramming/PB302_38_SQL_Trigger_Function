SELECT 
S.*,
CASE
WHEN S.Point<65 THEN 'Failed'
WHEN S.Point<85 THEN 'Normal'
WHEN S.Point<95 THEN 'Honor'
ELSE 'High Honor'
END AS CertificateType
FROM Students AS S

SELECT S.*,COALESCE(C.Name,'Failed') AS Certificate FROM Students AS S
LEFT JOIN Certificates AS C ON S.Point BETWEEN C.MIN AND C.Max


USE Restaurant

SELECT SUM(M.Price) FROM Orders AS O
JOIN Meals AS M ON M.Id=O.MealId
WHERE O.TableId=2

ALTER PROCEDURE USP_CALC_TABLE_AMOUNT
@TableId INT
AS
DECLARE @SUM MONEY
SELECT @SUM=SUM(M.Price) FROM Orders AS O
JOIN Meals AS M ON M.Id=O.MealId
WHERE O.TableId=@TableId
RETURN @SUM


DECLARE @RESULT MONEY
EXEC @RESULT = USP_CALC_TABLE_AMOUNT 2
SELECT @RESULT

CREATE FUNCTION UDF_CALC_TABLE_AMOUNT(@TableId INT)
RETURNS INT AS
BEGIN
DECLARE @SUM MONEY
SELECT @SUM=SUM(M.Price) FROM Orders AS O
JOIN Meals AS M ON M.Id=O.MealId
WHERE O.TableId=@TableId
RETURN @SUM
END

SELECT dbo.UDF_CALC_TABLE_AMOUNT(3)
